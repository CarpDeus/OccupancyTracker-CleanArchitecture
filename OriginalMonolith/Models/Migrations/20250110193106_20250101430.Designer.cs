// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OccupancyTracker.Models;

#nullable disable

namespace OccupancyTracker.Models.Migrations
{
    [DbContext(typeof(OccupancyContext))]
    [Migration("20250110193106_20250101430")]
    partial class _20250101430
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OccupancyTracker.Models.EmailProcessorHistory", b =>
                {
                    b.Property<long>("EmailProcessorHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmailProcessorHistoryId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("CurrentStatus")
                        .HasColumnType("smallint");

                    b.Property<long>("EmailProcessorPointersId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmailProcessorQueueId")
                        .HasColumnType("bigint");

                    b.Property<string>("OtherInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmailProcessorHistoryId");

                    b.ToTable("EmailProcessorHistory");
                });

            modelBuilder.Entity("OccupancyTracker.Models.EmailProcessorPointers", b =>
                {
                    b.Property<long>("EmailProcessorPointersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmailProcessorPointersId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailProcessorPointerDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailProcessorPointerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EmailProcessorQueueId")
                        .HasColumnType("bigint");

                    b.HasKey("EmailProcessorPointersId");

                    b.ToTable("EmailProcessorPointers");
                });

            modelBuilder.Entity("OccupancyTracker.Models.EmailProcessorQueue", b =>
                {
                    b.Property<long>("EmailProcessorQueueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmailProcessorQueueId"));

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailProcessorData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.HasKey("EmailProcessorQueueId");

                    b.ToTable("EmailProcessorQueue");
                });

            modelBuilder.Entity("OccupancyTracker.Models.Entrance", b =>
                {
                    b.Property<long>("EntranceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EntranceId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("int");

                    b.Property<string>("EntranceCounterInstanceSqid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CS_AS");

                    b.Property<string>("EntranceDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntranceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntranceSqid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CS_AS");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.HasKey("EntranceId");

                    b.ToTable("Entrances");
                });

            modelBuilder.Entity("OccupancyTracker.Models.EntranceCounter", b =>
                {
                    b.Property<long>("EntranceCounterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EntranceCounterId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("int");

                    b.Property<string>("EntranceCounterSqid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CS_AS");

                    b.Property<long>("EntranceId")
                        .HasColumnType("bigint");

                    b.Property<string>("EntranceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("RequiresAuthentication")
                        .HasColumnType("bit");

                    b.HasKey("EntranceCounterId");

                    b.ToTable("EntranceCounters");
                });

            modelBuilder.Entity("OccupancyTracker.Models.InvalidSecurityAttempt", b =>
                {
                    b.Property<long>("InvalidSecurityAttemptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("InvalidSecurityAttemptId"));

                    b.Property<string>("AdditionalAttemptInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AttemptLogged")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EntranceId")
                        .HasColumnType("bigint");

                    b.Property<string>("InvalidSecurityAttemptSqid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserInformationId")
                        .HasColumnType("bigint");

                    b.HasKey("InvalidSecurityAttemptId");

                    b.ToTable("InvalidSecurityAttempt");
                });

            modelBuilder.Entity("OccupancyTracker.Models.Location", b =>
                {
                    b.Property<long>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LocationId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentOccupancy")
                        .HasColumnType("int");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("int");

                    b.Property<int>("EntranceCount")
                        .HasColumnType("int");

                    b.Property<string>("LocationDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LocationSqid")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CS_AS");

                    b.Property<int>("MaxOccupancy")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OccupancyThresholdWarning")
                        .HasColumnType("int");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.ComplexProperty<Dictionary<string, object>>("LocationAddress", "OccupancyTracker.Models.Location.LocationAddress#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("AddressLine1")
                                .IsRequired()
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("AddressLine2")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(512)
                                .HasColumnType("nvarchar(512)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(512)
                                .HasColumnType("nvarchar(512)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("PhoneNumber", "OccupancyTracker.Models.Location.PhoneNumber#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("CountryCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Number")
                                .HasColumnType("nvarchar(max)");
                        });

                    b.HasKey("LocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("OccupancyTracker.Models.MarkdownText", b =>
                {
                    b.Property<long>("MarkdownTextId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MarkdownTextId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("int");

                    b.Property<string>("MarkdownContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarkdownTextId");

                    b.ToTable("MarkdownText");
                });

            modelBuilder.Entity("OccupancyTracker.Models.OccupancyLog", b =>
                {
                    b.Property<long>("OccupancyLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OccupancyLogId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentOccupancy")
                        .HasColumnType("int");

                    b.Property<long>("EntranceCounterId")
                        .HasColumnType("bigint");

                    b.Property<long>("EntranceId")
                        .HasColumnType("bigint");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<int>("LoggedChange")
                        .HasColumnType("int");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.HasKey("OccupancyLogId");

                    b.ToTable("OccupancyLogs");
                });

            modelBuilder.Entity("OccupancyTracker.Models.OccupancyLogSummary", b =>
                {
                    b.Property<long>("OccupancyLogSummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OccupancyLogSummaryId"));

                    b.Property<int>("EnteredLocation")
                        .HasColumnType("int");

                    b.Property<long>("EntranceId")
                        .HasColumnType("bigint");

                    b.Property<int>("ExitedLocation")
                        .HasColumnType("int");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<int>("LoggedDay")
                        .HasColumnType("int");

                    b.Property<int>("LoggedHour")
                        .HasColumnType("int");

                    b.Property<int>("LoggedMinute")
                        .HasColumnType("int");

                    b.Property<int>("LoggedMonth")
                        .HasColumnType("int");

                    b.Property<int>("LoggedYear")
                        .HasColumnType("int");

                    b.Property<int>("MaxOccupancy")
                        .HasColumnType("int");

                    b.Property<int>("MinOccupancy")
                        .HasColumnType("int");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.HasKey("OccupancyLogSummaryId");

                    b.ToTable("OccupancyLogSummaries");
                });

            modelBuilder.Entity("OccupancyTracker.Models.Organization", b =>
                {
                    b.Property<long>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrganizationId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("int");

                    b.Property<int>("DefaultRoleId")
                        .HasColumnType("int");

                    b.Property<int>("LocationCount")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationDescription")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("OrganizationSqid")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .UseCollation("SQL_Latin1_General_CP1_CS_AS");

                    b.Property<bool>("PaidClient")
                        .HasColumnType("bit");

                    b.Property<DateOnly?>("PaidThroughDate")
                        .HasColumnType("date");

                    b.ComplexProperty<Dictionary<string, object>>("OrganizationAddress", "OccupancyTracker.Models.Organization.OrganizationAddress#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("AddressLine1")
                                .IsRequired()
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("AddressLine2")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(512)
                                .HasColumnType("nvarchar(512)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(512)
                                .HasColumnType("nvarchar(512)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("PhoneNumber", "OccupancyTracker.Models.Organization.PhoneNumber#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("CountryCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Number")
                                .HasColumnType("nvarchar(max)");
                        });

                    b.HasKey("OrganizationId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("OccupancyTracker.Models.OrganizationInvitationCodes", b =>
                {
                    b.Property<long>("OrganizationInvitationCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrganizationInvitationCodeId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("InvitationCode")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .UseCollation("SQL_Latin1_General_CP1_CS_AS");

                    b.Property<DateOnly?>("InvitationRedeemed")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PostRegistrationRoleInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganizationInvitationCodeId");

                    b.ToTable("OrganizationInvitationCodes");
                });

            modelBuilder.Entity("OccupancyTracker.Models.OrganizationUser", b =>
                {
                    b.Property<long>("OrganizationUsersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrganizationUsersId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("bigint");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<long>("UserInformationId")
                        .HasColumnType("bigint");

                    b.Property<int>("UserStatusId")
                        .HasColumnType("int");

                    b.HasKey("OrganizationUsersId");

                    b.HasIndex("UserInformationId");

                    b.ToTable("OrganizationUsers");
                });

            modelBuilder.Entity("OccupancyTracker.Models.OrganizationUserRole", b =>
                {
                    b.Property<long>("OrganizationUserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrganizationUserRoleId"));

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganizationUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("OrganizationWide")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganizationUserRoleId");

                    b.HasIndex("LocationId");

                    b.ToTable("OrganizationUserRoles");
                });

            modelBuilder.Entity("OccupancyTracker.Models.UserInformation", b =>
                {
                    b.Property<long>("UserInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserInformationId"));

                    b.Property<bool>("BelongsToOrganization")
                        .HasColumnType("bit");

                    b.Property<long>("CreatedBy")
                        .HasMaxLength(450)
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentStatusId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("HasCompletedRegistration")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long?>("ModifiedBy")
                        .HasMaxLength(450)
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserInformationSqid")
                        .HasColumnType("nvarchar(max)")
                        .UseCollation("SQL_Latin1_General_CP1_CS_AS");

                    b.Property<long>("UserSsoInformationIdLastLoggedIn")
                        .HasColumnType("bigint");

                    b.ComplexProperty<Dictionary<string, object>>("ContactAddress", "OccupancyTracker.Models.UserInformation.ContactAddress#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("AddressLine1")
                                .IsRequired()
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("AddressLine2")
                                .HasMaxLength(1024)
                                .HasColumnType("nvarchar(1024)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(512)
                                .HasColumnType("nvarchar(512)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(512)
                                .HasColumnType("nvarchar(512)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("ContactPhoneNumber", "OccupancyTracker.Models.UserInformation.ContactPhoneNumber#PhoneNumber", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("CountryCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Number")
                                .HasColumnType("nvarchar(max)");
                        });

                    b.HasKey("UserInformationId");

                    b.ToTable("UserInformation");
                });

            modelBuilder.Entity("OccupancyTracker.Models.UserSsoInformation", b =>
                {
                    b.Property<long>("UserSsoInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserSsoInformationId"));

                    b.Property<string>("Auth0Identifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GivenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserInformationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UserLastLoggedIn")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserSsoInformationIdLastLoggedIn")
                        .HasColumnType("bigint");

                    b.HasKey("UserSsoInformationId");

                    b.ToTable("UserSsoInformation");
                });

            modelBuilder.Entity("OccupancyTracker.Models.OrganizationUser", b =>
                {
                    b.HasOne("OccupancyTracker.Models.UserInformation", "UserInformation")
                        .WithMany()
                        .HasForeignKey("UserInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserInformation");
                });

            modelBuilder.Entity("OccupancyTracker.Models.OrganizationUserRole", b =>
                {
                    b.HasOne("OccupancyTracker.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });
#pragma warning restore 612, 618
        }
    }
}
